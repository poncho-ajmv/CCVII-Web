{"ast":null,"code":"var _jsxFileName = \"/home/toto/poncho/CODE/os-page/src/pages/DocsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport Sidebar from '../components/Sidebar';\nimport Editor from '../components/Editor';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DocsPage() {\n  _s();\n  const [sections, setSections] = useState([]);\n  const [selectedId, setSelectedId] = useState(null);\n  const hasLoaded = useRef(false); // esto evita que se guarde en la 1ra carga\n\n  // Cargar secciones desde localStorage solo una vez\n  useEffect(() => {\n    const saved = localStorage.getItem('docs_sections');\n    if (saved) {\n      try {\n        const parsed = JSON.parse(saved);\n        if (Array.isArray(parsed)) {\n          setSections(parsed);\n          if (parsed.length > 0) {\n            setSelectedId(parsed[0].id);\n          }\n        }\n      } catch (e) {\n        console.error(\"Error al leer localStorage:\", e);\n      }\n    }\n    hasLoaded.current = true;\n  }, []);\n\n  // Guardar en localStorage si ya cargó\n  useEffect(() => {\n    if (hasLoaded.current) {\n      localStorage.setItem('docs_sections', JSON.stringify(sections));\n    }\n  }, [sections]);\n  const handleAddSection = () => {\n    const title = prompt(\"Título de la nueva sección:\");\n    if (!title) return;\n    const newSection = {\n      id: Date.now(),\n      title,\n      content: ''\n    };\n    setSections(prev => [...prev, newSection]);\n    setSelectedId(newSection.id);\n  };\n  const handleSelect = id => setSelectedId(id);\n  const handleUpdateContent = newContent => {\n    setSections(prev => prev.map(sec => sec.id === selectedId ? {\n      ...sec,\n      content: newContent\n    } : sec));\n  };\n  const selectedSection = sections.find(sec => sec.id === selectedId);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      sections: sections,\n      onAdd: handleAddSection,\n      onSelect: handleSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Editor, {\n      section: selectedSection,\n      onUpdateContent: handleUpdateContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(DocsPage, \"FRW46iGjL3pYmMsYw6ckolkUdfk=\");\n_c = DocsPage;\nexport default DocsPage;\nvar _c;\n$RefreshReg$(_c, \"DocsPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Sidebar","Editor","jsxDEV","_jsxDEV","DocsPage","_s","sections","setSections","selectedId","setSelectedId","hasLoaded","saved","localStorage","getItem","parsed","JSON","parse","Array","isArray","length","id","e","console","error","current","setItem","stringify","handleAddSection","title","prompt","newSection","Date","now","content","prev","handleSelect","handleUpdateContent","newContent","map","sec","selectedSection","find","style","display","children","onAdd","onSelect","fileName","_jsxFileName","lineNumber","columnNumber","section","onUpdateContent","_c","$RefreshReg$"],"sources":["/home/toto/poncho/CODE/os-page/src/pages/DocsPage.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport Sidebar from '../components/Sidebar';\nimport Editor from '../components/Editor';\n\nfunction DocsPage() {\n  const [sections, setSections] = useState([]);\n  const [selectedId, setSelectedId] = useState(null);\n  const hasLoaded = useRef(false); // esto evita que se guarde en la 1ra carga\n\n  // Cargar secciones desde localStorage solo una vez\n  useEffect(() => {\n    const saved = localStorage.getItem('docs_sections');\n    if (saved) {\n      try {\n        const parsed = JSON.parse(saved);\n        if (Array.isArray(parsed)) {\n          setSections(parsed);\n          if (parsed.length > 0) {\n            setSelectedId(parsed[0].id);\n          }\n        }\n      } catch (e) {\n        console.error(\"Error al leer localStorage:\", e);\n      }\n    }\n    hasLoaded.current = true;\n  }, []);\n\n  // Guardar en localStorage si ya cargó\n  useEffect(() => {\n    if (hasLoaded.current) {\n      localStorage.setItem('docs_sections', JSON.stringify(sections));\n    }\n  }, [sections]);\n\n  const handleAddSection = () => {\n    const title = prompt(\"Título de la nueva sección:\");\n    if (!title) return;\n    const newSection = {\n      id: Date.now(),\n      title,\n      content: ''\n    };\n    setSections(prev => [...prev, newSection]);\n    setSelectedId(newSection.id);\n  };\n\n  const handleSelect = (id) => setSelectedId(id);\n\n  const handleUpdateContent = (newContent) => {\n    setSections(prev =>\n      prev.map(sec => sec.id === selectedId ? { ...sec, content: newContent } : sec)\n    );\n  };\n\n  const selectedSection = sections.find(sec => sec.id === selectedId);\n\n  return (\n    <div style={{ display: 'flex' }}>\n      <Sidebar sections={sections} onAdd={handleAddSection} onSelect={handleSelect} />\n      <Editor section={selectedSection} onUpdateContent={handleUpdateContent} />\n    </div>\n  );\n}\n\nexport default DocsPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}