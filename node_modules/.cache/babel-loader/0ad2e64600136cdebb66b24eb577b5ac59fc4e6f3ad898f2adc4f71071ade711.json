{"ast":null,"code":"var _jsxFileName = \"/home/toto/poncho/CODE/os-page/src/pages/DocsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Sidebar from '../components/Sidebar';\nimport Editor from '../components/Editor';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DocsPage() {\n  _s();\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [sections, setSections] = useState(() => {\n    const saved = localStorage.getItem('docs_sections');\n    return saved ? JSON.parse(saved) : [];\n  });\n  const [selectedId, setSelectedId] = useState(() => {\n    const saved = localStorage.getItem('docs_sections');\n    const parsed = saved ? JSON.parse(saved) : [];\n    return parsed.length > 0 ? parsed[0].id : null;\n  });\n  useEffect(() => {\n    localStorage.setItem('docs_sections', JSON.stringify(sections));\n  }, [sections]);\n  const handleAddSection = () => {\n    if (!isAdmin) return alert(\"Solo el admin puede agregar secciones.\");\n    const title = prompt(\"T√≠tulo de la nueva secci√≥n:\");\n    if (!title) return;\n    const newSection = {\n      id: Date.now(),\n      title,\n      content: ''\n    };\n    setSections(prev => [...prev, newSection]);\n    setSelectedId(newSection.id);\n  };\n  const handleSelect = id => setSelectedId(id);\n  const handleUpdateContent = newContent => {\n    if (!isAdmin) return;\n    setSections(prev => prev.map(sec => sec.id === selectedId ? {\n      ...sec,\n      content: newContent\n    } : sec));\n  };\n  const selectedSection = sections.find(sec => sec.id === selectedId);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '10px',\n        borderBottom: '1px solid gray'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          const key = prompt(\"Ingresa clave de administrador:\");\n          if (key === 'admin123') {\n            setIsAdmin(true);\n            alert(\"Modo admin activado\");\n          } else {\n            alert(\"Clave incorrecta\");\n          }\n        },\n        children: \"\\uD83D\\uDD10 Activar modo admin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), isAdmin && /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          marginLeft: '10px',\n          color: 'green'\n        },\n        children: \"\\u2705 Modo Admin Activo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        sections: sections,\n        onAdd: handleAddSection,\n        onSelect: handleSelect,\n        isAdmin: isAdmin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Editor, {\n        section: selectedSection,\n        onUpdateContent: handleUpdateContent,\n        isAdmin: isAdmin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(DocsPage, \"Rj2kXk7YPuLk8AcwKbDy2WmqtLg=\");\n_c = DocsPage;\nexport default DocsPage;\nvar _c;\n$RefreshReg$(_c, \"DocsPage\");","map":{"version":3,"names":["React","useState","useEffect","Sidebar","Editor","jsxDEV","_jsxDEV","DocsPage","_s","isAdmin","setIsAdmin","sections","setSections","saved","localStorage","getItem","JSON","parse","selectedId","setSelectedId","parsed","length","id","setItem","stringify","handleAddSection","alert","title","prompt","newSection","Date","now","content","prev","handleSelect","handleUpdateContent","newContent","map","sec","selectedSection","find","children","style","padding","borderBottom","onClick","key","fileName","_jsxFileName","lineNumber","columnNumber","marginLeft","color","display","onAdd","onSelect","section","onUpdateContent","_c","$RefreshReg$"],"sources":["/home/toto/poncho/CODE/os-page/src/pages/DocsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Sidebar from '../components/Sidebar';\nimport Editor from '../components/Editor';\n\nfunction DocsPage() {\n  const [isAdmin, setIsAdmin] = useState(false);\n\n  const [sections, setSections] = useState(() => {\n    const saved = localStorage.getItem('docs_sections');\n    return saved ? JSON.parse(saved) : [];\n  });\n\n  const [selectedId, setSelectedId] = useState(() => {\n    const saved = localStorage.getItem('docs_sections');\n    const parsed = saved ? JSON.parse(saved) : [];\n    return parsed.length > 0 ? parsed[0].id : null;\n  });\n\n  useEffect(() => {\n    localStorage.setItem('docs_sections', JSON.stringify(sections));\n  }, [sections]);\n\n  const handleAddSection = () => {\n    if (!isAdmin) return alert(\"Solo el admin puede agregar secciones.\");\n    const title = prompt(\"T√≠tulo de la nueva secci√≥n:\");\n    if (!title) return;\n    const newSection = {\n      id: Date.now(),\n      title,\n      content: ''\n    };\n    setSections(prev => [...prev, newSection]);\n    setSelectedId(newSection.id);\n  };\n\n  const handleSelect = (id) => setSelectedId(id);\n\n  const handleUpdateContent = (newContent) => {\n    if (!isAdmin) return;\n    setSections(prev =>\n      prev.map(sec =>\n        sec.id === selectedId ? { ...sec, content: newContent } : sec\n      )\n    );\n  };\n\n  const selectedSection = sections.find(sec => sec.id === selectedId);\n\n  return (\n    <div>\n      <div style={{ padding: '10px', borderBottom: '1px solid gray' }}>\n        <button onClick={() => {\n          const key = prompt(\"Ingresa clave de administrador:\");\n          if (key === 'admin123') {\n            setIsAdmin(true);\n            alert(\"Modo admin activado\");\n          } else {\n            alert(\"Clave incorrecta\");\n          }\n        }}>üîê Activar modo admin</button>\n        {isAdmin && <span style={{ marginLeft: '10px', color: 'green' }}>‚úÖ Modo Admin Activo</span>}\n      </div>\n\n      <div style={{ display: 'flex' }}>\n        <Sidebar\n          sections={sections}\n          onAdd={handleAddSection}\n          onSelect={handleSelect}\n          isAdmin={isAdmin}\n        />\n        <Editor\n          section={selectedSection}\n          onUpdateContent={handleUpdateContent}\n          isAdmin={isAdmin}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default DocsPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}